
(require 'package)
(add-to-list 'package-archives
             '("melpa-stable" . "http://melpa-stable.milkbox.net/packages/"))
(package-initialize)

(let ((default-directory "~/.emacs.d/lisp/"))
  (normal-top-level-add-to-load-path '("."))
  (normal-top-level-add-subdirs-to-load-path))

(setenv "PATH" (concat (getenv "PATH") ":/usr/local/bin/"))
    (setq exec-path (append exec-path '("/usr/local/bin/")))

(setq inhibit-startup-message t)
(menu-bar-mode -1)
(tool-bar-mode -1)
(setq split-width-threshold 1) ;; split horizontal instead of vertical - http://stackoverflow.com/questions/7997590/how-to-change-the-default-split-screen-direction
;; (setq-default display-buffer-reuse-frames t)
;; (setq display-buffer-reuse-window t)
(scroll-bar-mode -1)
(setq make-backup-files nil)

;; Enable command and option keys when in OS X
(setq mac-command-modifier 'control)
(setq mac-option-modifier 'meta)

;; http://www.emacswiki.org/emacs/AlarmBell#toc11
(defun my-terminal-visible-bell ()
   "A friendlier visual bell effect."
   (invert-face 'mode-line)
   (run-with-timer 0.1 nil 'invert-face 'mode-line))
 
 (setq visible-bell nil
       ring-bell-function 'my-terminal-visible-bell)

;; Load yasnippets-snippets
(require 'yasnippet)
(setq yas-snippet-dirs
      '("~/.emacs.d/mysnippets/"
	"~/.emacs.d/yasnippet-snippets/")
      )
(yas-global-mode 1)

;; (require 'color-theme)			
;; (color-theme-initialize)
;; (color-theme-charcoal-black)

;; https://github.com/smihica/emmet-mode

(setq ido-enable-flex-matching t)
(setq ido-everywhere t)
(ido-mode 1 )				

(setq tramp-default-method "ssh")

;; http://www.emacswiki.org/emacs/VisualLineMode
(load-file "~/.emacs.d/visual-line-columns.el")

(defun toggle-wrap ()
  (if (eq (symbol-value 'visual-wrap-column) nil)
      (set-visual-wrap-column 70)
    (set-visual-wrap-column nil)))

(global-set-key (kbd "<f9>") (lambda () (interactive) (toggle-wrap)))
(global-set-key (kbd "<f10>") (lambda () (interactive) (toggle-wrap)))

(global-set-key (kbd "<f8>") 'whitespace-mode)

;; https://github.com/capitaomorte/autopair
(require 'autopair)
(autopair-global-mode) ;; enable autopair in all buffers

;; http://www.emacswiki.org/emacs/ProgrammingWithPythonModeDotEl
(autoload 'python-mode "python-mode" "Python Mode." t)
(add-to-list 'auto-mode-alist '("\\.py\\'" . python-mode))
(add-to-list 'interpreter-mode-alist '("python" . python-mode))
(autoload 'py-shell "python-mode" "Python shell." t)
(require 'flymake-python-pyflakes)
(add-hook 'python-mode-hook 'flymake-python-pyflakes-load)

(autoload 'js3-mode "js3-mode" nil t)
(add-to-list 'auto-mode-alist '("\\.js$" . js3-mode))

(setq-default indent-tabs-mode nil)
