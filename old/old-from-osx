;;

(require 'package)
(add-to-list 'package-archives
             '("melpa-stable" . "http://melpa-stable.milkbox.net/packages/"))
(package-initialize)

;; http://www.emacswiki.org/emacs/LoadPath

;;; Code:
(let ((default-directory "~/.emacs.d/lisp/"))
  (normal-top-level-add-to-load-path '("."))
  (normal-top-level-add-subdirs-to-load-path))

(setenv "PATH" (concat (getenv "PATH") ":/usr/local/bin/"))
    (setq exec-path (append exec-path '("/usr/local/bin/")))

(setq inhibit-startup-message t)
(menu-bar-mode -1)
(tool-bar-mode -1)
(setq split-width-threshold 1) ;; split horizontal instead of vertical - http://stackoverflow.com/questions/7997590/how-to-change-the-default-split-screen-direction
;; (setq-default display-buffer-reuse-frames t)
;; (setq display-buffer-reuse-window t)
(scroll-bar-mode -1)
(setq make-backup-files nil)

;; http://www.emacswiki.org/emacs/AlarmBell#toc11
(defun my-terminal-visible-bell ()
   "A friendlier visual bell effect."
   (invert-face 'mode-line)
   (run-with-timer 0.1 nil 'invert-face 'mode-line))
 
 (setq visible-bell nil
       ring-bell-function 'my-terminal-visible-bell)

(setq ido-enable-flex-matching t)
(setq ido-everywhere t)
(ido-mode 1 )				

(setq tramp-default-method "ssh")

;; (require 'color-theme)			
;; (color-theme-initialize)
;; (color-theme-charcoal-black)

;; https://github.com/smihica/emmet-mode -> since I no longer have HTML yasnippets

;; Load yasnippets-snippets
;;(add-to-list 'load-path)

(require 'yasnippet)
(setq yas-snippet-dirs
      '("~/.emacs.d/mysnippets/"
	"~/.emacs.d/yasnippet-snippets/")
      )
(yas-global-mode 1)

;; https://github.com/AndreaCrotti/yasnippet-snippets#yasnippet-official-snippet-collections

;;(add-to-list 'yas-root-directory "~/.emacs.d/yasnippet-snippets/")
;;(yas-initialize)


;; http://www.emacswiki.org/emacs/VisualLineMode
(load-file "~/.emacs.d/visual-line-columns.el")

(defun toggle-wrap ()
  (if (eq (symbol-value 'visual-wrap-column) nil)
      (set-visual-wrap-column 70)
    (set-visual-wrap-column nil)))

(global-set-key (kbd "<f9>") (lambda () (interactive) (toggle-wrap)))
(global-set-key (kbd "<f10>") (lambda () (interactive) (toggle-wrap)))


(global-set-key (kbd "<f8>") 'whitespace-mode)

;; https://github.com/capitaomorte/autopair
(require 'autopair)
(autopair-global-mode) ;; enable autopair in all buffers

;; http://www.emacswiki.org/emacs/ProgrammingWithPythonModeDotEl
(autoload 'python-mode "python-mode" "Python Mode." t)
(add-to-list 'auto-mode-alist '("\\.py\\'" . python-mode))
(add-to-list 'interpreter-mode-alist '("python" . python-mode))
(autoload 'py-shell "python-mode" "Python shell." t)
(require 'flymake-python-pyflakes)
(add-hook 'python-mode-hook 'flymake-python-pyflakes-load)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-faces-vector
   [default bold shadow italic underline bold bold-italic bold])
 '(ansi-color-names-vector
   ["#eee8d5" "#dc322f" "#859900" "#b58900" "#268bd2" "#d33682" "#2aa198" "#839496"])
 '(compilation-message-face (quote default))
 '(cua-global-mark-cursor-color "#2aa198")
 '(cua-normal-cursor-color "#657b83")
 '(cua-overwrite-cursor-color "#b58900")
 '(cua-read-only-cursor-color "#859900")
 '(custom-enabled-themes (quote (wombat)))
 '(custom-safe-themes
   (quote
    ("06f0b439b62164c6f8f84fdda32b62fb50b6d00e8b01c2208e55543a6337433a" "8aebf25556399b58091e533e455dd50a6a9cba958cc4ebb0aab175863c25b9a4" "8d6fb24169d94df45422617a1dfabf15ca42a97d594d28b3584dc6db711e0e0b" "d677ef584c6dfc0697901a44b885cc18e206f05114c8a3b7fde674fce6180879" "7f2f00f767a0655c86183da819f304285f080264db1b933e8df00ff8e8fa7dc9" "628278136f88aa1a151bb2d6c8a86bf2b7631fbea5f0f76cba2a0079cd910f7d" default)))
 '(fci-rule-color "#eee8d5")
 '(help-at-pt-display-when-idle (quote (flymake-overlay)) nil (help-at-pt))
 '(help-at-pt-timer-delay 0.9)
 '(highlight-changes-colors (quote ("#d33682" "#6c71c4")))
 '(highlight-symbol-colors
   (--map
    (solarized-color-blend it "#fdf6e3" 0.25)
    (quote
     ("#b58900" "#2aa198" "#dc322f" "#6c71c4" "#859900" "#cb4b16" "#268bd2"))))
 '(highlight-symbol-foreground-color "#586e75")
 '(highlight-tail-colors
   (quote
    (("#eee8d5" . 0)
     ("#B4C342" . 20)
     ("#69CABF" . 30)
     ("#69B7F0" . 50)
     ("#DEB542" . 60)
     ("#F2804F" . 70)
     ("#F771AC" . 85)
     ("#eee8d5" . 100))))
 '(hl-bg-colors
   (quote
    ("#DEB542" "#F2804F" "#FF6E64" "#F771AC" "#9EA0E5" "#69B7F0" "#69CABF" "#B4C342")))
 '(hl-fg-colors
   (quote
    ("#fdf6e3" "#fdf6e3" "#fdf6e3" "#fdf6e3" "#fdf6e3" "#fdf6e3" "#fdf6e3" "#fdf6e3")))
 '(magit-diff-use-overlays nil)
 '(package-archives
   (quote
    (("melpa-stable" . "http://melpa-stable.milkbox.net/packages/")
     ("gnu" . "http://elpa.gnu.org/packages/")
     ("marmalade" . "http://marmalade-repo.org/packages/"))))
 '(pos-tip-background-color "#eee8d5")
 '(pos-tip-foreground-color "#586e75")
 '(smartrep-mode-line-active-bg (solarized-color-blend "#859900" "#eee8d5" 0.2))
 '(term-default-bg-color "#fdf6e3")
 '(term-default-fg-color "#657b83")
 '(vc-annotate-background nil)
 '(vc-annotate-color-map
   (quote
    ((20 . "#dc322f")
     (40 . "#c85d17")
     (60 . "#be730b")
     (80 . "#b58900")
     (100 . "#a58e00")
     (120 . "#9d9100")
     (140 . "#959300")
     (160 . "#8d9600")
     (180 . "#859900")
     (200 . "#669b32")
     (220 . "#579d4c")
     (240 . "#489e65")
     (260 . "#399f7e")
     (280 . "#2aa198")
     (300 . "#2898af")
     (320 . "#2793ba")
     (340 . "#268fc6")
     (360 . "#268bd2"))))
 '(vc-annotate-very-old-color nil)
 '(weechat-color-list
   (quote
    (unspecified "#fdf6e3" "#eee8d5" "#990A1B" "#dc322f" "#546E00" "#859900" "#7B6000" "#b58900" "#00629D" "#268bd2" "#93115C" "#d33682" "#00736F" "#2aa198" "#657b83" "#839496"))))

(autoload 'js3-mode "js3-mode" nil t)
(add-to-list 'auto-mode-alist '("\\.js$" . js3-mode))

(setq-default indent-tabs-mode nil)

;; http://web-mode.org/
(require 'web-mode)
(add-to-list 'auto-mode-alist '("\\.html?\\'" . web-mode))

(defun my-web-mode-hook ()
  "Hooks for Web mode."
  (setq web-mode-markup-indent-offset 2)
  (setq web-mode-css-indent-offset 2)
  (setq web-mode-code-indent-offset 2)
  ;; (setq web-mode-enable-engine-detection t)

  (add-to-list 'web-mode-indentation-params '("lineup-args" . t))
  (add-to-list 'web-mode-indentation-params '("lineup-calls" . t))
  (add-to-list 'web-mode-indentation-params '("lineup-concats" . t))
  (add-to-list 'web-mode-indentation-params '("lineup-ternary" . t))

)
(add-hook 'web-mode-hook  'my-web-mode-hook)



;; (autoload 'asm86-mode "asm86-mode" t)
(add-to-list 'auto-mode-alist '("\\.s$" . text-mode))


;;  (autoload 'asm86-mode "<location>/asm86-mode.elc")
;;  (setq auto-mode-alist 
;;     (append '(("\\.asm\\'" . asm86-mode) ("\\.inc\\'" . asm86-mode)) 
;;     auto-mode-alist))

;; To install clojure mode
;; https://github.com/clojure-emacs/clojure-mode

;; (require 'nodejs-repl)

(setq pop-up-windows nil)
;; (set-window-fringes nil 0 2)

;; (set-default-font "Ubuntu Mono 11")
;; (set-face-attribute 'default nil :height 108)
;; Change directory back
;; (cd "/home/tom/")

(add-to-list 'default-frame-alist '(font . "Monaco 10" ))
(set-face-attribute 'default t :font "Monaco 10" )


(add-to-list 'default-frame-alist '(height . 65))
(add-to-list 'default-frame-alist '(width . 236))

(setq mac-command-modifier 'control)
(setq mac-option-modifier 'meta)

(show-paren-mode)

(add-to-list 'custom-theme-load-path "~/.emacs.d/themes")

;; Pymacs
;; (autoload 'pymacs-apply "pymacs")
;; (autoload 'pymacs-call "pymacs")
;; (autoload 'pymacs-eval "pymacs" nil t)
;; (autoload 'pymacs-exec "pymacs" nil t)
;; (autoload 'pymacs-load "pymacs" nil t)
;; (autoload 'pymacs-autoload "pymacs")

;; (require 'pymacs)
;; (pymacs-load "ropemacs" "rope-")

;; Standard Jedi.el setting
(add-hook 'python-mode-hook 'jedi:setup)
(setq jedi:complete-on-dot t)


;; I'm deciding not to use linting in the editor for Python
;; because I'm coding in Emacs running on OS X, but all of the
;; code is actually executed in various virutal environments
;; on a Linux VM. So I'll just run pylint on the command line
;; from now on.
;; (add-hook 'after-init-hook #'global-flycheck-mode)

;; Vanilla Emacs: You can use `C-x C-+’ and ‘C-x C--’ 
;; (‘text-scale-adjust’) to increase or decrease the buffer text size 
;; (`C-+’ or ‘C--’ to repeat). To restore the default (global) face 
;; height, type ‘C-x C-0’. ‘S-mouse-1’ pops up a menu where you 
;; can choose these same actions.

;; Insert time stamp using 'date' shell command
;; http://stackoverflow.com/questions/251908/how-can-i-insert-current-date-and-time-into-a-file-using-emacs
;; C-u M-! date
;; Tue Sep 30 22:48:14 CDT 2014

(setq org-src-fontify-natively t)

(load-theme 'wombat t)


;; ==================================================



(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )


(put 'downcase-region 'disabled nil)
(put 'upcase-region 'disabled nil)

